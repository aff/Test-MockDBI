- Move database-handle-specific data to the mock DBI 
  database handle object, so that different database
  handles can have different Test::MockDBI configurations.
  This will probably involve changing the Test::MockDBI API
  to include the database handle as an argument.   Also, the
  DBI functions that return a statement handle will need to
  be modified to return the correct mock DBI database handle.

- Add code so the debug output of Test::MockDBI can go to different
  places rather than just standard output.  This would allow
  use of Test::MockDBI in environments where examining
  standard output is impractical at best, like Apache modules.
  IO::String would help in redirecting output to strings.

- Increase the number of DBI methods mocked up.

- Figure out how DBI::quote() should work when mocked-up.

- Could Test::MockDBI and DBD::Mock work together?  Does this
  even make any sense?
